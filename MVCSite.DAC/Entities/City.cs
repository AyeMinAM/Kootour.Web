//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MVCSite.DAC.Entities
{
    public partial class City
    {
        #region Primitive Properties
    
        public virtual int CityId
        {
            get;
            set;
        }
    
        public virtual Nullable<int> CountryID
        {
            get;
            set;
        }
    
        public virtual Nullable<int> RegionID
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual string Latitude
        {
            get;
            set;
        }
    
        public virtual string Longitude
        {
            get;
            set;
        }
    
        public virtual string TimeZone
        {
            get;
            set;
        }
    
        public virtual string DmaId
        {
            get;
            set;
        }
    
        public virtual string Code
        {
            get;
            set;
        }
    
        public virtual Nullable<int> NCountryID
        {
            get { return _nCountryID; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_nCountryID != value)
                    {
                        if (Country != null && Country.country_id != value)
                        {
                            Country = null;
                        }
                        _nCountryID = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _nCountryID;
    
        public virtual Nullable<int> StateID
        {
            get;
            set;
        }
    
        public virtual string UniqueCityName
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsInUse
        {
            get;
            set;
        }
    
        public virtual string UniqueCityNameInURL
        {
            get;
            set;
        }
    
        public virtual string Intro
        {
            get;
            set;
        }
    
        public virtual string DestinationList
        {
            get;
            set;
        }
    
        public virtual string BlogList
        {
            get;
            set;
        }
    
        public virtual string Tip1
        {
            get;
            set;
        }
    
        public virtual string Tip2
        {
            get;
            set;
        }
    
        public virtual string Tip3
        {
            get;
            set;
        }
    
        public virtual string Tip4
        {
            get;
            set;
        }
    
        public virtual string Tip5
        {
            get;
            set;
        }
    
        public virtual string Tip6
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Country Country
        {
            get { return _country; }
            set
            {
                if (!ReferenceEquals(_country, value))
                {
                    var previousValue = _country;
                    _country = value;
                    FixupCountry(previousValue);
                }
            }
        }
        private Country _country;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupCountry(Country previousValue)
        {
            if (previousValue != null && previousValue.Cities.Contains(this))
            {
                previousValue.Cities.Remove(this);
            }
    
            if (Country != null)
            {
                if (!Country.Cities.Contains(this))
                {
                    Country.Cities.Add(this);
                }
                if (NCountryID != Country.country_id)
                {
                    NCountryID = Country.country_id;
                }
            }
            else if (!_settingFK)
            {
                NCountryID = null;
            }
        }

        #endregion

    }
}
