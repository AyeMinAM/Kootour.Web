//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MVCSite.DAC.Entities
{
    public partial class Tour
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual bool IsHistorical
        {
            get;
            set;
        }
    
        public virtual bool IsAdventure
        {
            get;
            set;
        }
    
        public virtual bool IsLeisureSports
        {
            get;
            set;
        }
    
        public virtual bool IsCultureArts
        {
            get;
            set;
        }
    
        public virtual bool IsNatureRural
        {
            get;
            set;
        }
    
        public virtual bool IsFestivalEvents
        {
            get;
            set;
        }
    
        public virtual bool IsNightlifeParty
        {
            get;
            set;
        }
    
        public virtual bool IsFoodDrink
        {
            get;
            set;
        }
    
        public virtual bool IsShoppingMarket
        {
            get;
            set;
        }
    
        public virtual bool IsTransportation
        {
            get;
            set;
        }
    
        public virtual bool IsBusinessInterpretation
        {
            get;
            set;
        }
    
        public virtual bool IsPhotography
        {
            get;
            set;
        }
    
        public virtual bool IsEnglish
        {
            get;
            set;
        }
    
        public virtual bool IsChineseMandarian
        {
            get;
            set;
        }
    
        public virtual bool IsChineseCantonese
        {
            get;
            set;
        }
    
        public virtual bool IsFrench
        {
            get;
            set;
        }
    
        public virtual bool IsSpanish
        {
            get;
            set;
        }
    
        public virtual bool IsGerman
        {
            get;
            set;
        }
    
        public virtual bool IsPortuguese
        {
            get;
            set;
        }
    
        public virtual bool IsItalian
        {
            get;
            set;
        }
    
        public virtual bool IsRussian
        {
            get;
            set;
        }
    
        public virtual bool IsKorean
        {
            get;
            set;
        }
    
        public virtual bool IsJapanese
        {
            get;
            set;
        }
    
        public virtual bool IsNorwegian
        {
            get;
            set;
        }
    
        public virtual bool IsSwedish
        {
            get;
            set;
        }
    
        public virtual bool IsDanish
        {
            get;
            set;
        }
    
        public virtual string Overview
        {
            get;
            set;
        }
    
        public virtual string Itinerary
        {
            get;
            set;
        }
    
        public virtual int Duration
        {
            get;
            set;
        }
    
        public virtual int TourCityID
        {
            get;
            set;
        }
    
        public virtual string MeetupLocation
        {
            get;
            set;
        }
    
        public virtual int MinTouristNum
        {
            get;
            set;
        }
    
        public virtual int MaxTouristNum
        {
            get;
            set;
        }
    
        public virtual byte BookingType
        {
            get;
            set;
        }
    
        public virtual int MinHourAdvance
        {
            get;
            set;
        }
    
        public virtual byte Status
        {
            get;
            set;
        }
    
        public virtual System.DateTime EnterTime
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifyTime
        {
            get;
            set;
        }
    
        public virtual int UserID
        {
            get;
            set;
        }
    
        public virtual byte DurationTimeType
        {
            get;
            set;
        }
    
        public virtual int ReviewCount
        {
            get;
            set;
        }
    
        public virtual double ReviewAverageScore
        {
            get;
            set;
        }
    
        public virtual Nullable<bool> IsFeatured
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<TourExclusion> TourExclusions
        {
            get
            {
                if (_tourExclusions == null)
                {
                    var newCollection = new FixupCollection<TourExclusion>();
                    newCollection.CollectionChanged += FixupTourExclusions;
                    _tourExclusions = newCollection;
                }
                return _tourExclusions;
            }
            set
            {
                if (!ReferenceEquals(_tourExclusions, value))
                {
                    var previousValue = _tourExclusions as FixupCollection<TourExclusion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourExclusions;
                    }
                    _tourExclusions = value;
                    var newValue = value as FixupCollection<TourExclusion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourExclusions;
                    }
                }
            }
        }
        private ICollection<TourExclusion> _tourExclusions;
    
        public virtual ICollection<TourInclusion> TourInclusions
        {
            get
            {
                if (_tourInclusions == null)
                {
                    var newCollection = new FixupCollection<TourInclusion>();
                    newCollection.CollectionChanged += FixupTourInclusions;
                    _tourInclusions = newCollection;
                }
                return _tourInclusions;
            }
            set
            {
                if (!ReferenceEquals(_tourInclusions, value))
                {
                    var previousValue = _tourInclusions as FixupCollection<TourInclusion>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourInclusions;
                    }
                    _tourInclusions = value;
                    var newValue = value as FixupCollection<TourInclusion>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourInclusions;
                    }
                }
            }
        }
        private ICollection<TourInclusion> _tourInclusions;
    
        public virtual ICollection<TourPicture> TourPictures
        {
            get
            {
                if (_tourPictures == null)
                {
                    var newCollection = new FixupCollection<TourPicture>();
                    newCollection.CollectionChanged += FixupTourPictures;
                    _tourPictures = newCollection;
                }
                return _tourPictures;
            }
            set
            {
                if (!ReferenceEquals(_tourPictures, value))
                {
                    var previousValue = _tourPictures as FixupCollection<TourPicture>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourPictures;
                    }
                    _tourPictures = value;
                    var newValue = value as FixupCollection<TourPicture>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourPictures;
                    }
                }
            }
        }
        private ICollection<TourPicture> _tourPictures;
    
        public virtual ICollection<TourSchedule> TourSchedules
        {
            get
            {
                if (_tourSchedules == null)
                {
                    var newCollection = new FixupCollection<TourSchedule>();
                    newCollection.CollectionChanged += FixupTourSchedules;
                    _tourSchedules = newCollection;
                }
                return _tourSchedules;
            }
            set
            {
                if (!ReferenceEquals(_tourSchedules, value))
                {
                    var previousValue = _tourSchedules as FixupCollection<TourSchedule>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourSchedules;
                    }
                    _tourSchedules = value;
                    var newValue = value as FixupCollection<TourSchedule>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourSchedules;
                    }
                }
            }
        }
        private ICollection<TourSchedule> _tourSchedules;
    
        public virtual ICollection<UserWish> UserWishes
        {
            get
            {
                if (_userWishes == null)
                {
                    var newCollection = new FixupCollection<UserWish>();
                    newCollection.CollectionChanged += FixupUserWishes;
                    _userWishes = newCollection;
                }
                return _userWishes;
            }
            set
            {
                if (!ReferenceEquals(_userWishes, value))
                {
                    var previousValue = _userWishes as FixupCollection<UserWish>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserWishes;
                    }
                    _userWishes = value;
                    var newValue = value as FixupCollection<UserWish>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserWishes;
                    }
                }
            }
        }
        private ICollection<UserWish> _userWishes;
    
        public virtual ICollection<UserTourReview> UserTourReviews
        {
            get
            {
                if (_userTourReviews == null)
                {
                    var newCollection = new FixupCollection<UserTourReview>();
                    newCollection.CollectionChanged += FixupUserTourReviews;
                    _userTourReviews = newCollection;
                }
                return _userTourReviews;
            }
            set
            {
                if (!ReferenceEquals(_userTourReviews, value))
                {
                    var previousValue = _userTourReviews as FixupCollection<UserTourReview>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserTourReviews;
                    }
                    _userTourReviews = value;
                    var newValue = value as FixupCollection<UserTourReview>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserTourReviews;
                    }
                }
            }
        }
        private ICollection<UserTourReview> _userTourReviews;
    
        public virtual ICollection<UserTourBooking> UserTourBookings
        {
            get
            {
                if (_userTourBookings == null)
                {
                    var newCollection = new FixupCollection<UserTourBooking>();
                    newCollection.CollectionChanged += FixupUserTourBookings;
                    _userTourBookings = newCollection;
                }
                return _userTourBookings;
            }
            set
            {
                if (!ReferenceEquals(_userTourBookings, value))
                {
                    var previousValue = _userTourBookings as FixupCollection<UserTourBooking>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupUserTourBookings;
                    }
                    _userTourBookings = value;
                    var newValue = value as FixupCollection<UserTourBooking>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupUserTourBookings;
                    }
                }
            }
        }
        private ICollection<UserTourBooking> _userTourBookings;
    
        public virtual ICollection<TourExtra> TourExtras
        {
            get
            {
                if (_tourExtras == null)
                {
                    var newCollection = new FixupCollection<TourExtra>();
                    newCollection.CollectionChanged += FixupTourExtras;
                    _tourExtras = newCollection;
                }
                return _tourExtras;
            }
            set
            {
                if (!ReferenceEquals(_tourExtras, value))
                {
                    var previousValue = _tourExtras as FixupCollection<TourExtra>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourExtras;
                    }
                    _tourExtras = value;
                    var newValue = value as FixupCollection<TourExtra>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourExtras;
                    }
                }
            }
        }
        private ICollection<TourExtra> _tourExtras;
    
        public virtual ICollection<TourPriceBreakdown> TourPriceBreakdowns
        {
            get
            {
                if (_tourPriceBreakdowns == null)
                {
                    var newCollection = new FixupCollection<TourPriceBreakdown>();
                    newCollection.CollectionChanged += FixupTourPriceBreakdowns;
                    _tourPriceBreakdowns = newCollection;
                }
                return _tourPriceBreakdowns;
            }
            set
            {
                if (!ReferenceEquals(_tourPriceBreakdowns, value))
                {
                    var previousValue = _tourPriceBreakdowns as FixupCollection<TourPriceBreakdown>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourPriceBreakdowns;
                    }
                    _tourPriceBreakdowns = value;
                    var newValue = value as FixupCollection<TourPriceBreakdown>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourPriceBreakdowns;
                    }
                }
            }
        }
        private ICollection<TourPriceBreakdown> _tourPriceBreakdowns;
    
        public virtual ICollection<TourVendorPromo> TourVendorPromoes
        {
            get
            {
                if (_tourVendorPromoes == null)
                {
                    var newCollection = new FixupCollection<TourVendorPromo>();
                    newCollection.CollectionChanged += FixupTourVendorPromoes;
                    _tourVendorPromoes = newCollection;
                }
                return _tourVendorPromoes;
            }
            set
            {
                if (!ReferenceEquals(_tourVendorPromoes, value))
                {
                    var previousValue = _tourVendorPromoes as FixupCollection<TourVendorPromo>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupTourVendorPromoes;
                    }
                    _tourVendorPromoes = value;
                    var newValue = value as FixupCollection<TourVendorPromo>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupTourVendorPromoes;
                    }
                }
            }
        }
        private ICollection<TourVendorPromo> _tourVendorPromoes;

        #endregion

        #region Association Fixup
    
        private void FixupTourExclusions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourExclusion item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourExclusion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupTourInclusions(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourInclusion item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourInclusion item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupTourPictures(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourPicture item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourPicture item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupTourSchedules(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourSchedule item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourSchedule item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupUserWishes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserWish item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserWish item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupUserTourReviews(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserTourReview item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserTourReview item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupUserTourBookings(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (UserTourBooking item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (UserTourBooking item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupTourExtras(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourExtra item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourExtra item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupTourPriceBreakdowns(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourPriceBreakdown item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourPriceBreakdown item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }
    
        private void FixupTourVendorPromoes(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (TourVendorPromo item in e.NewItems)
                {
                    item.Tour = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (TourVendorPromo item in e.OldItems)
                {
                    if (ReferenceEquals(item.Tour, this))
                    {
                        item.Tour = null;
                    }
                }
            }
        }

        #endregion

    }
}
