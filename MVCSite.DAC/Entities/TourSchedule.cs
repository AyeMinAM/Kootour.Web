//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace MVCSite.DAC.Entities
{
    public partial class TourSchedule
    {
        #region Primitive Properties
    
        public virtual int ID
        {
            get;
            set;
        }
    
        public virtual int TourID
        {
            get { return _tourID; }
            set
            {
                if (_tourID != value)
                {
                    if (Tour != null && Tour.ID != value)
                    {
                        Tour = null;
                    }
                    _tourID = value;
                }
            }
        }
        private int _tourID;
    
        public virtual string Name
        {
            get;
            set;
        }
    
        public virtual System.DateTime BeginDate
        {
            get;
            set;
        }
    
        public virtual System.DateTime EndDate
        {
            get;
            set;
        }
    
        public virtual string DateRange
        {
            get;
            set;
        }
    
        public virtual bool IsMonday
        {
            get;
            set;
        }
    
        public virtual bool IsTuesday
        {
            get;
            set;
        }
    
        public virtual bool IsWednesday
        {
            get;
            set;
        }
    
        public virtual bool IsThursday
        {
            get;
            set;
        }
    
        public virtual bool IsFriday
        {
            get;
            set;
        }
    
        public virtual bool IsSaturday
        {
            get;
            set;
        }
    
        public virtual bool IsSunday
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DiscountTourists
        {
            get;
            set;
        }
    
        public virtual Nullable<int> DiscountValue
        {
            get;
            set;
        }
    
        public virtual Nullable<double> DiscountPercent
        {
            get;
            set;
        }
    
        public virtual string StartTime1
        {
            get;
            set;
        }
    
        public virtual string StartTime2
        {
            get;
            set;
        }
    
        public virtual string StartTime3
        {
            get;
            set;
        }
    
        public virtual string StartTime4
        {
            get;
            set;
        }
    
        public virtual string StartTime5
        {
            get;
            set;
        }
    
        public virtual string StartTime6
        {
            get;
            set;
        }
    
        public virtual Nullable<double> NetPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<double> SugRetailPrice
        {
            get;
            set;
        }
    
        public virtual Nullable<double> CommisionPay
        {
            get;
            set;
        }
    
        public virtual System.DateTime EnterTime
        {
            get;
            set;
        }
    
        public virtual System.DateTime ModifyTime
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual Tour Tour
        {
            get { return _tour; }
            set
            {
                if (!ReferenceEquals(_tour, value))
                {
                    var previousValue = _tour;
                    _tour = value;
                    FixupTour(previousValue);
                }
            }
        }
        private Tour _tour;

        #endregion

        #region Association Fixup
    
        private void FixupTour(Tour previousValue)
        {
            if (previousValue != null && previousValue.TourSchedules.Contains(this))
            {
                previousValue.TourSchedules.Remove(this);
            }
    
            if (Tour != null)
            {
                if (!Tour.TourSchedules.Contains(this))
                {
                    Tour.TourSchedules.Add(this);
                }
                if (TourID != Tour.ID)
                {
                    TourID = Tour.ID;
                }
            }
        }

        #endregion

    }
}
